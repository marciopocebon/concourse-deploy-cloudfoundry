groups:
- name: all
  jobs:
  - populate-or-rotate-vault
  - get-product-version
  - deploy
  - smoke-tests
  - acceptance-tests
  - push-apps-manager
  - notifications
  - notifications-ui
  - autoscaling
  - autoscaling-register-broker
  - load-vault-properties
- name: vault-interactions
  jobs:
  - populate-or-rotate-vault
  - load-vault-properties
- name: deploy
  jobs:
  - get-product-version
  - deploy
- name: tests
  jobs:
  - smoke-tests
  - acceptance-tests
- name: errands
  jobs:
  - push-apps-manager
  - notifications
  - notifications-ui
  - autoscaling
  - autoscaling-register-broker

resources:
- name: daily
  type: time
  source: {interval: 24h}
- name: {{product-slug}}
  type: pivnet
  check_every: 4h
  source:
    api_token: {{pivnet-api-token}}
    product_slug: {{product-slug}}
    product_version: {{product-version}}
    sort_by: semver
- name: every-4hrs
  type: time
  source: {interval: 4h}
- name: concourse-deploy-cloudfoundry
  type: git
  check_every: 4h
  source:
    uri: https://github.com/s-matyukevich/concourse-deploy-cloudfoundry
    branch: master
- name: omg-cli
  type: github-release
  check_every: 4h
  source:
    user: enaml-ops
    repository: omg-cli
- name: ert-plugin
  type: github-release
  check_every: 4h
  source:
    user: enaml-ops
    repository: ert-plugin 
    pre_release: true
- name: {{deployment-name}}
  type: bosh-deployment
  source:
    ca_cert: {{bosh-cacert}}
    client_id: {{bosh-client-id}}
    client_secret: {{bosh-client-secret}}
    deployment: {{deployment-name}}
    target: {{bosh-url}}
- name: stemcells
  type: pivnet
  source:
    api_token: {{pivnet-api-token}}
    product_slug: stemcells
    product_version: {{stemcell-version}}

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

jobs:
- name: load-vault-properties
  plan: 
    - aggregate:
      - get: concourse-deploy-cloudfoundry
    - task: load-vault-properties 
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/populate-vault-deployment-properties.sh
        params:
          VAULT_ADDR: {{vault-addr}}
          VAULT_HASH_MISC: {{vault-hash-misc}}
          VAULT_TOKEN: {{vault-token}}
          VAULT_PROPERTIES_JSON: {{vault-json-string}}
          BOSH_CLIENT_SECRET: {{bosh-pass}}
          BOSH_CACERT: {{bosh-cacert}}
        inputs:
        - name: concourse-deploy-cloudfoundry
- name: populate-or-rotate-vault
  plan:
    - aggregate:
      - get: concourse-deploy-cloudfoundry
      - get: omg-cli
        params:
          globs:
          - omg-linux
      - get: ert-plugin
        params:
          globs:
          - ert-1-8-linux
    - task: populate-or-rotate
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: allomov/deploy-worker
            tags: v2.0
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/populate-or-rotate-vault.sh
        params:
          PRODUCT_PLUGIN: {{product-plugin}}
          SYSTEM_DOMAIN: {{system-domain}}
          VAULT_ADDR: {{vault-addr}}
          VAULT_HASH_IP: {{vault-hash-ip}}
          VAULT_HASH_HOSTVARS: {{vault-hash-hostvars}}
          VAULT_HASH_KEYCERT: {{vault-hash-keycert}}
          VAULT_HASH_MISC: {{vault-hash-misc}}
          VAULT_HASH_PASSWORD: {{vault-hash-password}}
          VAULT_TOKEN: {{vault-token}}
          STEMCELL_VERSION: {{stemcell-version}}
          UAA_LDAP_PASSWORD: {{uaa-ldap-password}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        - name: omg-cli
        - name: ert-plugin
        outputs:
- name: get-product-version
  plan:
    - aggregate:
      - get: concourse-deploy-cloudfoundry
      - get: omg-cli
        params:
          globs:
          - omg-linux
      - get: ert-plugin
        trigger: true
        params:
          globs:
          - ert-1-8-linux
    - task: get-product-version
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/get-version-from-plugin.sh
        params:
          PRODUCT_PLUGIN: {{product-plugin}}
          OUTPUT_DIR: versions
        inputs:
        - name: concourse-deploy-cloudfoundry
        - name: omg-cli
        - name: ert-plugin
        outputs:
        - name: versions
          path: ""
          #    - task: update-pipeline
          #      config:
          #        platform: linux
          #        image_resource:
          #          type: docker-image
          #          source:
          #            repository: virtmerlin/deploy-worker
          #        run:
          #          path: concourse-deploy-cloudfoundry/ci/tasks/update-pipeline.sh
          #        params:
          #          PRODUCT: {{product-slug}}
          #          PIPELINE_NAME: deploy-pcf
          #          CONCOURSE_URL: {{concourse-url}}
          #          CONCOURSE_USER: {{concourse-user}}
          #          CONCOURSE_PASS: {{concourse-pass}}
          #        inputs:
          #        - name: concourse-deploy-cloudfoundry
          #        - name: versions
          #        outputs:
- name: deploy
  plan:
    - aggregate:
      - get: concourse-deploy-cloudfoundry
      - get: omg-cli
        passed: [get-product-version]
        params:
          globs:
          - omg-linux
      - get: ert-plugin
        passed: [get-product-version]
        trigger: true
        params:
          globs:
          - ert-1-8-linux
      - get: {{product-slug}}
        params:
          globs:
          - cf-*
      - get: stemcells
        trigger: true
        params:
          globs:
          - {{stemcell-cpi-glob}}
    - task: generate-manifest
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/generate-pcf-manifest.sh
        params:
          BOSH_CLIENT: {{bosh-user}}
          BOSH_CLIENT_SECRET: {{bosh-pass}}
          BOSH_CACERT: {{bosh-cacert}}
          PRODUCT_PLUGIN: {{product-plugin}}
          SKIP_HAPROXY: {{skip-haproxy}}
          STEMCELL_VERSION: {{stemcell-version}}
          VAULT_ADDR: {{vault-addr}}
          VAULT_HASH_IP: {{vault-hash-ip}}
          VAULT_HASH_HOSTVARS: {{vault-hash-hostvars}}
          VAULT_HASH_KEYCERT: {{vault-hash-keycert}}
          VAULT_HASH_MISC: {{vault-hash-misc}}
          VAULT_HASH_PASSWORD: {{vault-hash-password}}
          VAULT_TOKEN: {{vault-token}}
          OUTPUT_DIR: manifest
          UAA_LDAP_PASSWORD: {{uaa-ldap-password}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        - name: omg-cli
        - name: ert-plugin
        outputs:
        - name: manifest
          path: ""
    - task: extract-tile
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/extract-tile.sh
        params:
          PRODUCT_DIR: {{product-slug}}
          OUTPUT_DIR: product-extracted
        inputs:
        - name: concourse-deploy-cloudfoundry
        - name: {{product-slug}}
        outputs:
        - name: product-extracted
          path: ""
    - put: {{deployment-name}}
      params:
        manifest: manifest/deployment.yml
        stemcells:
        - stemcells/bosh-stemcell*.tgz
        releases:
        - product-extracted/releases/cf*.tgz
        - product-extracted/releases/diego*.tgz
        - product-extracted/releases/garden-runc*.tgz
        - product-extracted/releases/cflinuxfs2*.tgz
        - product-extracted/releases/etcd*.tgz
        - product-extracted/releases/mysql-backup*.tgz
        - product-extracted/releases/push-apps-manager*.tgz
        - product-extracted/releases/cf-autoscaling*.tgz
        - product-extracted/releases/notifications*.tgz
- name: smoke-tests
  plan:
    - aggregate:
      - get: every-4hrs
        trigger: true
      - get: concourse-deploy-cloudfoundry
      - get: {{deployment-name}}
        passed: [deploy]
    - task: smoke-tests
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: smoke-tests
          BOSH_TARGET: {{bosh-url}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
- name: acceptance-tests
  plan:
    - aggregate:
      - get: daily
        trigger: true
      - get: concourse-deploy-cloudfoundry
      - get: {{deployment-name}}
        passed: [deploy]
    - task: acceptance-tests
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: acceptance-tests
          BOSH_TARGET: {{bosh-url}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
- name: push-apps-manager
  plan:
    - aggregate:
      - get: concourse-deploy-cloudfoundry
      - get: {{deployment-name}}
        passed: [deploy]
        trigger: true
    - task: push-apps-manager
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: push-apps-manager
          BOSH_TARGET: {{bosh-url}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
- name: notifications
  plan:
    - aggregate:
      - get: concourse-deploy-cloudfoundry
      - get: {{deployment-name}}
        passed: [push-apps-manager]
        trigger: true
    - task: notifications
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: notifications
          BOSH_TARGET: {{bosh-url}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
- name: notifications-ui
  plan:
    - aggregate:
      - get: concourse-deploy-cloudfoundry
      - get: {{deployment-name}}
        passed: [notifications]
        trigger: true
    - task: notifications-ui
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: notifications-ui
          BOSH_TARGET: {{bosh-url}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
- name: autoscaling
  plan:
    - aggregate:
      - get: concourse-deploy-cloudfoundry
      - get: {{deployment-name}}
        passed: [notifications-ui]
        trigger: true
    - task: autoscaling
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: autoscaling
          BOSH_TARGET: {{bosh-url}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
- name: autoscaling-register-broker
  plan:
    - aggregate:
      - get: concourse-deploy-cloudfoundry
      - get: {{deployment-name}}
        passed: [autoscaling]
        trigger: true
    - task: autoscaling-register-broker
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-cloudfoundry/ci/tasks/run-errand.sh
        params:
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_CLIENT: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_DEPLOYMENT_NAME: {{deployment-name}}
          BOSH_ERRAND: autoscaling-register-broker
          BOSH_TARGET: {{bosh-url}}
        inputs:
        - name: concourse-deploy-cloudfoundry
        outputs:
